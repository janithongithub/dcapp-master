package com.dc.ordergeneratorservice;

import com.dc.ordergeneratorservice.Order;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.UUID;

import org.springframework.stereotype.Component;


public class Order {

   
    public UUID uuid;   //stored in db as varchar(36)
    
    public List<Integer> itemIdList = new ArrayList<>();
   
    public List<Integer> itemFrqencyList = new ArrayList<>();

    



    /////////////////////////can change on runtime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

    int orderStatus; //return   0 - new     1 - completed   5 - processing

    /////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

    public static List<Order> orderList = new ArrayList<>();   //  static list of newly created objects

    public List<Order> getOrderList(){
        return orderList;
    }
    public void setOderList(List<Order> list){
        orderList = list;
    }


    public static HashMap<UUID,Order> orderMap = new HashMap<>(); 

    public HashMap<UUID,Order> getOrderMap(){
        return orderMap;
    }

    public void setOrderMap(HashMap<UUID,Order> map){
        orderMap = map;
    }

    //////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

   
    OrderList orderUUList = new OrderList();


    //////////////////Constructor-- only construct Orders Object if Order is generated by Ordergenerator\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    public Order(){
        OrderGenerator orderGenerator = new OrderGenerator();
        orderGenerator.generateRandomOrders();

        if( !(orderGenerator.itemIdList.isEmpty()) ){
            //generate orderID
            //add items to lists
            this.uuid = UUID.randomUUID();
            this.itemIdList = orderGenerator.itemIdList;
            this.itemFrqencyList = orderGenerator.itemFrequencyList;
            this.orderStatus = 0;

            OrderList.orderUUIDList.add(this.uuid);
            //OrderList.orderObjectList.add(this);
            orderList.add(this);        // adding newly created objects to a static list

            orderMap.put(this.uuid,this);   // adding newly created objects to a static hashMap
            
        }
        

    }

    /////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    //Status must be updated at runtime
    public void setOrderStatus(int status){

        this.orderStatus = status;
    }

    public int getOrderStatus(){
        return orderStatus;
    }

    public String getStringOrderStatus(){

        if(orderStatus == 0){
            return "NEW";
        }
        else if (orderStatus == 1){
            orderList.remove(this);
            orderMap.remove(this.uuid,this);                //removing item from list and rearrange
            OrderList.orderUUIDList.remove(this.uuid);      
            return "COMPLETED";
        }else
        return "PROCESSING";
    }

    //////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



    public Order(UUID uuid, List<Integer> itemIdList, List<Integer> itemFrqencyList, int orderStatus, OrderGenerator orderGenerator, OrderList orderUUList) {
        this.uuid = uuid;
        this.itemIdList = itemIdList;
        this.itemFrqencyList = itemFrqencyList;
        this.orderStatus = orderStatus;
        this.orderUUList = orderUUList;
    }

    public UUID getUuid() {
        return this.uuid;
    }

    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    public List<Integer> getItemIdList() {
        return this.itemIdList;
    }

    public void setItemIdList(List<Integer> itemIdList) {
        this.itemIdList = itemIdList;
    }

    public List<Integer> getItemFrqencyList() {
        return this.itemFrqencyList;
    }

    public void setItemFrqencyList(List<Integer> itemFrqencyList) {
        this.itemFrqencyList = itemFrqencyList;
    }



    public OrderList getOrderUUList() {
        return this.orderUUList;
    }

    public void setOrderUUList(OrderList orderUUList) {
        this.orderUUList = orderUUList;
    }

    public Order uuid(UUID uuid) {
        this.uuid = uuid;
        return this;
    }

    public Order itemIdList(List<Integer> itemIdList) {
        this.itemIdList = itemIdList;
        return this;
    }

    public Order itemFrqencyList(List<Integer> itemFrqencyList) {
        this.itemFrqencyList = itemFrqencyList;
        return this;
    }

    public Order orderStatus(int orderStatus) {
        this.orderStatus = orderStatus;
        return this;
    }


    public Order orderUUList(OrderList orderUUList) {
        this.orderUUList = orderUUList;
        return this;
    }




    
}